{"ast":null,"code":"import { Chart } from \"chart.js/auto\";\nimport * as i0 from \"@angular/core\";\nconst data = {\n  labels: ['January', 'February', 'March', 'April'],\n  datasets: [{\n    type: 'bar',\n    label: 'Eurozone',\n    data: [10, 20, 30, 40],\n    order: 2,\n    borderWidth: 2,\n    borderColor: \"black\",\n    backgroundColor: \"blue\",\n    borderSkipped: false\n  }, {\n    type: 'bar',\n    label: 'USA',\n    data: [-10, -20, 30, 40],\n    order: 2,\n    borderWidth: 2,\n    borderColor: \"black\",\n    backgroundColor: \"green\",\n    borderSkipped: false\n  }, {\n    type: 'line',\n    label: 'Welt',\n    data: [10, 20, 30, 40],\n    order: 1,\n    borderWidth: 2,\n    borderColor: \"red\",\n    backgroundColor: \"red\",\n    pointRadius: 0\n  }, {\n    type: 'line',\n    label: 'Finanzkrise',\n    data: [8, 1, 50, 2],\n    order: 1,\n    borderWidth: 2,\n    borderColor: \"yellow\",\n    backgroundColor: \"yellow\",\n    pointRadius: 0\n  }]\n};\nconst config = {\n  data: {\n    labels: ['January', 'February', 'March', 'April'],\n    datasets: [{\n      type: 'bar',\n      label: 'Eurozone',\n      data: [10, 20, 30, 40],\n      order: 2,\n      borderWidth: 2,\n      borderColor: \"black\",\n      backgroundColor: \"blue\",\n      borderSkipped: false\n    }, {\n      type: 'bar',\n      label: 'USA',\n      data: [-10, -20, 30, 40],\n      order: 2,\n      borderWidth: 2,\n      borderColor: \"black\",\n      backgroundColor: \"green\",\n      borderSkipped: false\n    }, {\n      type: 'line',\n      label: 'Welt',\n      data: [10, 20, 30, 40],\n      order: 1,\n      borderWidth: 2,\n      borderColor: \"red\",\n      backgroundColor: \"red\",\n      pointRadius: 0\n    }, {\n      type: 'line',\n      label: 'Finanzkrise',\n      data: [8, 1, 50, 2],\n      order: 1,\n      borderWidth: 2,\n      borderColor: \"yellow\",\n      backgroundColor: \"yellow\",\n      pointRadius: 0\n    }]\n  }\n};\nexport class TsplotComponent {\n  constructor() {\n    this.chart = [];\n  }\n  // constructor() {}\n  ngOnInit() {\n    this.chart = new Chart('tsplot', config);\n  }\n  static #_ = this.ɵfac = function TsplotComponent_Factory(t) {\n    return new (t || TsplotComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TsplotComponent,\n    selectors: [[\"app-tsplot\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"id\", \"tsplot\"]],\n    template: function TsplotComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"tsplot works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"canvas\", 0);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.chart);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,KAAK,QAA4B,eAAe;;AAGzD,MAAMC,IAAI,GAAQ;EAChBC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;EACjDC,QAAQ,EAAE,CAAC;IACPC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,UAAU;IACjBJ,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACtBK,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBC,eAAe,EAAE,MAAM;IACvBC,aAAa,EAAE;GAClB,EACD;IACIN,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,KAAK;IACZJ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACxBK,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,OAAO;IACpBC,eAAe,EAAE,OAAO;IACxBC,aAAa,EAAE;GAClB,EACD;IACIN,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,MAAM;IACbJ,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACtBK,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,KAAK;IAClBC,eAAe,EAAE,KAAK;IACtBE,WAAW,EAAE;GAChB,EACD;IACIP,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE,aAAa;IACpBJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;IACnBK,KAAK,EAAE,CAAC;IACRC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,QAAQ;IACrBC,eAAe,EAAE,QAAQ;IACzBE,WAAW,EAAE;GAChB;CACF;AAED,MAAMC,MAAM,GAAQ;EAClBX,IAAI,EACJ;IACMC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;IACjDC,QAAQ,EAAE,CAAC;MACPC,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,UAAU;MACjBJ,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACtBK,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE,MAAM;MACvBC,aAAa,EAAE;KAClB,EACD;MACIN,IAAI,EAAE,KAAK;MACXC,KAAK,EAAE,KAAK;MACZJ,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACxBK,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,OAAO;MACpBC,eAAe,EAAE,OAAO;MACxBC,aAAa,EAAE;KAClB,EACD;MACIN,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,MAAM;MACbJ,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;MACtBK,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,KAAK;MAClBC,eAAe,EAAE,KAAK;MACtBE,WAAW,EAAE;KAChB,EACD;MACIP,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,aAAa;MACpBJ,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;MACnBK,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,QAAQ;MACrBC,eAAe,EAAE,QAAQ;MACzBE,WAAW,EAAE;KAChB;;CAER;AASD,OAAM,MAAOE,eAAe;EAL5BC;IAOE,UAAK,GAAQ,EAAE;;EACf;EAEAC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAIhB,KAAK,CAAC,QAAQ,EAAEY,MAAM,CAAC;EAC1C;EAAC;qBAPUC,eAAe;EAAA;EAAA;UAAfA,eAAe;IAAAI;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCtG5BC,yBAAG;QAAAA,6BAAa;QAAAA,iBAAI;QAEpBA,2BAAK;QACiBA,YAAS;QAAAA,iBAAS;;;QAAlBA,eAAS;QAATA,+BAAS","names":["Chart","data","labels","datasets","type","label","order","borderWidth","borderColor","backgroundColor","borderSkipped","pointRadius","config","TsplotComponent","constructor","ngOnInit","chart","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\simon\\Desktop\\Render\\src\\app\\tsplot\\tsplot.component.ts","C:\\Users\\simon\\Desktop\\Render\\src\\app\\tsplot\\tsplot.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Chart, ChartConfiguration } from \"chart.js/auto\";\n\n\nconst data: any = {\n  labels: ['January', 'February', 'March', 'April'],\n  datasets: [{\n      type: 'bar',\n      label: 'Eurozone',\n      data: [10, 20, 30, 40],\n      order: 2,\n      borderWidth: 2,\n      borderColor: \"black\",\n      backgroundColor: \"blue\",\n      borderSkipped: false,\n  },\n  {\n      type: 'bar',\n      label: 'USA',\n      data: [-10, -20, 30, 40],\n      order: 2,\n      borderWidth: 2,\n      borderColor: \"black\",\n      backgroundColor: \"green\",\n      borderSkipped: false\n  },\n  {\n      type: 'line',\n      label: 'Welt',\n      data: [10, 20, 30, 40],\n      order: 1,\n      borderWidth: 2,\n      borderColor: \"red\",\n      backgroundColor: \"red\",\n      pointRadius: 0\n  },\n  {\n      type: 'line',\n      label: 'Finanzkrise',\n      data: [8, 1, 50, 2],\n      order: 1,\n      borderWidth: 2,\n      borderColor: \"yellow\",\n      backgroundColor: \"yellow\",\n      pointRadius: 0\n  }]\n};\n\nconst config: any = {\n  data:\n  {\n        labels: ['January', 'February', 'March', 'April'],\n        datasets: [{\n            type: 'bar',\n            label: 'Eurozone',\n            data: [10, 20, 30, 40],\n            order: 2,\n            borderWidth: 2,\n            borderColor: \"black\",\n            backgroundColor: \"blue\",\n            borderSkipped: false,\n        },\n        {\n            type: 'bar',\n            label: 'USA',\n            data: [-10, -20, 30, 40],\n            order: 2,\n            borderWidth: 2,\n            borderColor: \"black\",\n            backgroundColor: \"green\",\n            borderSkipped: false\n        },\n        {\n            type: 'line',\n            label: 'Welt',\n            data: [10, 20, 30, 40],\n            order: 1,\n            borderWidth: 2,\n            borderColor: \"red\",\n            backgroundColor: \"red\",\n            pointRadius: 0\n        },\n        {\n            type: 'line',\n            label: 'Finanzkrise',\n            data: [8, 1, 50, 2],\n            order: 1,\n            borderWidth: 2,\n            borderColor: \"yellow\",\n            backgroundColor: \"yellow\",\n            pointRadius: 0\n        }]\n    }\n};\n\n\n\n@Component({\n  selector: 'app-tsplot',\n  templateUrl: './tsplot.component.html',\n  styleUrls: ['./tsplot.component.scss']\n})\nexport class TsplotComponent {\n  \n  chart: any = [];\n  // constructor() {}\n\n  ngOnInit() {\n    this.chart = new Chart('tsplot', config);\n  }\n\n}\n","<p>tsplot works!</p>\n\n<div>\n  <canvas id=\"tsplot\">{{chart}}</canvas>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}