{"ast":null,"code":"import { Chart, Utils } from \"chart.js/auto\";\nimport * as i0 from \"@angular/core\";\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {\n  count: DATA_COUNT,\n  min: -100,\n  max: 100\n};\nconst labels = Utils.months({\n  count: 7\n});\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: 'Dataset 1',\n    data: Utils.numbers(NUMBER_CFG),\n    borderColor: Utils.CHART_COLORS.red,\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5)\n  }, {\n    label: 'Dataset 2',\n    data: Utils.numbers(NUMBER_CFG),\n    borderColor: Utils.CHART_COLORS.blue,\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5)\n  }]\n};\nconst actions = [{\n  name: 'Randomize',\n  handler(chart) {\n    chart.data.datasets.forEach(dataset => {\n      dataset.data = Utils.numbers({\n        count: chart.data.labels.length,\n        min: -100,\n        max: 100\n      });\n    });\n    chart.update();\n  }\n}, {\n  name: 'Add Dataset',\n  handler(chart) {\n    const data = chart.data;\n    const dsColor = Utils.namedColor(chart.data.datasets.length);\n    const newDataset = {\n      label: 'Dataset ' + (data.datasets.length + 1),\n      backgroundColor: Utils.transparentize(dsColor, 0.5),\n      borderColor: dsColor,\n      data: Utils.numbers({\n        count: data.labels.length,\n        min: -100,\n        max: 100\n      })\n    };\n    chart.data.datasets.push(newDataset);\n    chart.update();\n  }\n}, {\n  name: 'Add Data',\n  handler(chart) {\n    const data = chart.data;\n    if (data.datasets.length > 0) {\n      data.labels = Utils.months({\n        count: data.labels.length + 1\n      });\n      for (let index = 0; index < data.datasets.length; ++index) {\n        data.datasets[index].data.push(Utils.rand(-100, 100));\n      }\n      chart.update();\n    }\n  }\n}, {\n  name: 'Remove Dataset',\n  handler(chart) {\n    chart.data.datasets.pop();\n    chart.update();\n  }\n}, {\n  name: 'Remove Data',\n  handler(chart) {\n    chart.data.labels.splice(-1, 1); // remove the label first\n    chart.data.datasets.forEach(dataset => {\n      dataset.data.pop();\n    });\n    chart.update();\n  }\n}];\nconst config = {\n  type: 'line',\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  }\n};\nexport class TsplotComponent {\n  constructor() {\n    this.chart = [];\n  }\n  // constructor() {}\n  ngOnInit() {\n    this.chart = new Chart('tsplot', config);\n  }\n  static #_ = this.ɵfac = function TsplotComponent_Factory(t) {\n    return new (t || TsplotComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TsplotComponent,\n    selectors: [[\"app-tsplot\"]],\n    decls: 5,\n    vars: 1,\n    consts: [[\"id\", \"tsplot\"]],\n    template: function TsplotComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"tsplot works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\")(3, \"canvas\", 0);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.chart);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Chart","Utils","DATA_COUNT","NUMBER_CFG","count","min","max","labels","months","data","datasets","label","numbers","borderColor","CHART_COLORS","red","backgroundColor","transparentize","blue","actions","name","handler","chart","forEach","dataset","length","update","dsColor","namedColor","newDataset","push","index","rand","pop","splice","config","type","options","responsive","plugins","legend","position","title","display","text","TsplotComponent","constructor","ngOnInit","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["C:\\Users\\simon\\Desktop\\Render\\src\\app\\tsplot\\tsplot.component.ts","C:\\Users\\simon\\Desktop\\Render\\src\\app\\tsplot\\tsplot.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Chart, ChartConfiguration, Utils } from \"chart.js/auto\";\n\n\nconst DATA_COUNT: any = 7;\nconst NUMBER_CFG: any = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels: any = Utils.months({count: 7});\nconst data: any = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n    }\n  ]\n};\n\n\nconst actions: any = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset => {\n        dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        data: Utils.numbers({count: data.labels.length, min: -100, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length > 0) {\n        data.labels = Utils.months({count: data.labels.length + 1});\n\n        for (let index = 0; index < data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.rand(-100, 100));\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset => {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n\nconst config: any = {\n  type: 'line',\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Chart.js Line Chart'\n      }\n    }\n  },\n};\n\n\n\n@Component({\n  selector: 'app-tsplot',\n  templateUrl: './tsplot.component.html',\n  styleUrls: ['./tsplot.component.scss']\n})\nexport class TsplotComponent {\n  \n  chart: any = [];\n  // constructor() {}\n\n  ngOnInit() {\n    this.chart = new Chart('tsplot', config);\n  }\n\n}\n","<p>tsplot works!</p>\n\n<div>\n  <canvas id=\"tsplot\">{{chart}}</canvas>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}